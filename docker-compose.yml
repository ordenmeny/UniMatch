services:
  frontend-app:
    build:
      context: ./UniMatch-frontend
    volumes:
      - static-data:/vol/static/frontend
  app:
    build:
      context: ./djangoProject
    restart: always
    volumes:
      - static-data:/vol/web/static
      - media-data:/vol/web/media
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DOCKER_PROJECT=1

  db:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "devdb", "-U", "devuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
      - frontend-app
    ports:
      - "8000:8000"
      - "80:80"
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media

volumes:
  db-data:
  static-data:
  media-data:
